{
	"info": {
		"_postman_id": "841b6aea-f274-44fe-b315-8491b9ec742c",
		"name": "Deck API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10369941"
	},
	"item": [
		{
			"name": "cards",
			"item": []
		},
		{
			"name": "deck",
			"item": [
				{
					"name": "{deck id}",
					"item": [
						{
							"name": "A Brand New Deck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"//Test 2: Verify Correct Amount of Cards Based On Jokers_Enabled Param\r",
											"pm.test(\"Test Correct Amount of Cards Available\", function () \r",
											"{\r",
											"    var jsonBody = pm.response.json();\r",
											"    var query = pm.request.url.query.toObject();\r",
											"    console.log(query.jokers_enabled);\r",
											"    if (query.jokers_enabled === \"true\")\r",
											"    {\r",
											"        pm.expect(jsonBody.remaining).to.equal(54);\r",
											"    }\r",
											"    else {\r",
											"    console.log(jsonBody);\r",
											"    pm.expect(jsonBody).to.exist; \r",
											"    pm.expect(jsonBody.remaining).to.equal(52);\r",
											"    }\r",
											"});\r",
											"\r",
											"//Test 3: Verify Deck_Id is provided and set to env variable for other testing\r",
											"pm.test(\"Deck_Id is returned and set\", function() {\r",
											"    // var response = JSON.parse(responseBody);\r",
											"    // postman.setEnvironmentVariable(\"deck_id\", response.deck_id);\r",
											"    var jsonBody = pm.response.json();\r",
											"    var deckId = jsonBody.deck_id;\r",
											"    console.log(deckId);\r",
											"    pm.expect(jsonBody.deck_id).to.not.be.null;\r",
											"    pm.environment.set(\"deck_id\", deckId);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/new/?jokers_enabled=true",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"new",
										""
									],
									"query": [
										{
											"key": "jokers_enabled",
											"value": "true"
										},
										{
											"key": "cards",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Shuffle the cards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"//Test 2: Verify cards are shuffled\r",
											"pm.test(\"Cards Shuffled Check\", function () {\r",
											"    var jsonBody = pm.response.json();\r",
											"    console.log(jsonBody);\r",
											"    pm.expect(jsonBody).to.exist; \r",
											"    pm.expect(jsonBody.shuffled).to.equal(true);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=6",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"new",
										"shuffle",
										""
									],
									"query": [
										{
											"key": "deck_count",
											"value": "6"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Draw Cards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"var jsonBody = pm.response.json();\r",
											"var cardCode = jsonBody.cards[0].code;\r",
											"pm.environment.set(\"cardCode\", cardCode);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/{{deck_id}}/draw/?count=1",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"{{deck_id}}",
										"draw",
										""
									],
									"query": [
										{
											"key": "count",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Reshuffle the Cards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Invalid deck_id Test\", function () {\r",
											"    var deckId = pm.environment.get(\"deck_id\");\r",
											"    if (!deckId) {\r",
											"        pm.response.to.have.status(404);\r",
											"        console.log(\"Deck Id is a required field. Either invalid or missing\");\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/{{deck_id}}/?remaining=true",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"{{deck_id}}",
										""
									],
									"query": [
										{
											"key": "remaining",
											"value": "true"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "A Partial Deck",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/new/shuffle/?cards=AS,2S,KS,AD,2D,KD,AC,2C,KC,AH,2H,KH",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"new",
										"shuffle",
										""
									],
									"query": [
										{
											"key": "cards",
											"value": "AS,2S,KS,AD,2D,KD,AC,2C,KC,AH,2H,KH"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "{pile name}",
					"item": [
						{
							"name": "Adding to Piles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/{{deck_id}}/pile/player1/add/?cards={{cardCode}}",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"{{deck_id}}",
										"pile",
										"player1",
										"add",
										""
									],
									"query": [
										{
											"key": "cards",
											"value": "{{cardCode}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Shuffle Piles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/{{deck_id}}/pile/player1/shuffle/",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"{{deck_id}}",
										"pile",
										"player1",
										"shuffle",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "List Cards in Pile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Test 1: Status Code 200 is Expected\r",
											"pm.test(\"Status Code 200 Test\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    pm.response.to.be.ok;\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://deckofcardsapi.com/api/deck/{{deck_id}}/pile/player1/list/",
									"protocol": "https",
									"host": [
										"deckofcardsapi",
										"com"
									],
									"path": [
										"api",
										"deck",
										"{{deck_id}}",
										"pile",
										"player1",
										"list",
										""
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "draw",
			"item": []
		}
	]
}